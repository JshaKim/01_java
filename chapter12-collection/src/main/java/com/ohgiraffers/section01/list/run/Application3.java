package com.ohgiraffers.section01.list.run;

import java.util.ArrayList;
import java.util.List;

public class Application3 {

    /*
    * 단일 연결 리스트
    * : 저장한 요소가 순서를 유지하징 낳고 저장되지만 이러간 요소를 사이클 링크로 연결하여 구성하는 구조로
    * 마치 연결된 리스트 형태인 것처럼 만든 자료구조
    * 요소의 저장과 삭제시 다음 요소를 가리키는 참조링크만 변병하면 된다
    * 요소의 저장과 삭제가 빈번히 일어나는 경우 보다 성능면에서 우수하다.
    * 하지만 단일 연결 리스트는 다음 요소만 링크하기 때문에 이전 요소로 접근하기 어렵낟
    * 이를 보완하고자 만든 것이 이중 연결 리스트
    *
    *
    * 이중 연결 리스트
    * 단일 연결 리스트는 다음 요소만 링크하는 반면 이 중 연결 리스트는 이전 요소도 링크하여
    * 이전 요소로 접근하기 쉽게 고안된 자료구조
    *
    *
    * 는 이중 연결 리스틀를 구현한 것이며 역시 list 인터페이스를 상속 받아
    * 와 사용하는 방법이 거의 유사하다.
    * 하지만 내부적으로 요소를 저장하는 방법에 차이가 있음
    * 각 커렉션 프레임워크 클래스들의 특징 파악, 그에 따른 자료구조를 구현한 클래스를 선택해야 함.
    *
    * */

}
